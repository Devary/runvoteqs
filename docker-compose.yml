version: '3'

services:
  #  sonarqube:
  #    image: sonarqube:community
  #    hostname: sonarqube
  #    container_name: sonarqube
  #    read_only: true
  #    depends_on:
  #      db_sonar:
  #        condition: service_healthy
  #    environment:
  #      SONAR_JDBC_URL: jdbc:postgresql://db:5431/sonar
  #      SONAR_JDBC_USERNAME: sonar
  #      SONAR_JDBC_PASSWORD: sonar
  #    volumes:
  #      - sonarqube_data:/opt/sonarqube/data
  #      - sonarqube_extensions:/opt/sonarqube/extensions
  #      - sonarqube_logs:/opt/sonarqube/logs
  #      - sonarqube_temp:/opt/sonarqube/temp
  #    ports:
  #      - "9000:9000"
  #    networks:
  #      - sonar-net
  #  db_sonar:
  #    image: postgres:17
  #    healthcheck:
  #      test: [ "CMD-SHELL", "pg_isready" ]
  #      interval: 10s
  #      timeout: 5s
  #      retries: 5
  #    hostname: postgresql4sonar
  #    container_name: postgresql
  #    environment:
  #      POSTGRES_USER: sonar
  #      POSTGRES_PASSWORD: sonar
  #      POSTGRES_DB: sonar
  #      PGUSER: postgres
  #    ports:
  #      - 5431:5431
  #    volumes:
  #      - postgresql:/var/lib/postgresql
  #      - postgresql_data:/var/lib/postgresql/data
  #    networks:
  #      - sonar-net
  db_runvote:
    image: postgres:17
    container_name: rv_database
    volumes:
      - dbscripts:/docker-entrypoint-initdb.d/
#      - postgresql:/var/lib/postgresql
#      - postgresql_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
      PGUSER: postgres
    ports:
      - 5432:5432
    networks:
      - runvoteqs-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready", "-d", "quarkus_test","-u","postgres" ]
      interval: 3s
      timeout: 10s
      retries: 4
  runvote:
    #    build:
    #      context: ..
    #      dockerfile: runvoteqs/src/main/docker/Dockerfile.jvm
    image: devary/runvote-main-jvm:latest
    container_name: rvlatest
    environment:
      QUARKUS_DATASOURCE_REACTIVE_URL: vertx-reactive:postgresql://db_runvote:5432/postgres
      QUARKUS_DATASOURCE_USERNAME: postgres
      QUARKUS_DATASOURCE_PASSWORD: postgres
    ports:
      - 8989:8989
    networks:
      - runvoteqs-network
    depends_on:
      db_runvote:
        condition: service_healthy
  web:
    container_name: webrunvote
    build: src/main/javascript
    ports:
      - 4200:4200
    networks:
      - runvoteqs-network
networks:
  runvoteqs-network:
    #driver: none #The container has no access to the outside world..
    #driver: host #Removes network isolation and binds the container directly to the host network.
    #No need for port mapping; the container shares the host's IP stack.
    driver: bridge #Used for container-to-container communication on the same host.
    #Containers can talk to each other via container names.
    #External access requires port mapping (e.g., -p 8080:80)..
    #driver: overlay #Allows containers on different nodes (machines) to communicate as if they are on the same network.
  #sonar-net:
  #  driver: bridge
volumes:
  dbscripts:
  #sonarqube_data:
  #sonarqube_temp:
  #sonarqube_extensions:
  #sonarqube_logs:
  #postgresql:
  #postgresql_data: